import numpy as np
from sklearn.model_selection import KFold, StratifiedKFold
from sklearn.metrics import accuracy_score
from sklearn.datasets import load_iris
from sklearn.ensemble import RandomForestClassifier

data = load_iris()
X, y = data.data, data.target
model = RandomForestClassifier()

kf = KFold(n_splits=5, shuffle=True, random_state=42)
kf_scores = []

for train_index, test_index in kf.split(X):
    X_train, X_test = X[train_index], X[test_index]
    y_train, y_test = y[train_index], y[test_index]
    model.fit(X_train, y_train)
    predictions = model.predict(X_test)
    score = accuracy_score(y_test, predictions)
    kf_scores.append(score)

print(f'K-Fold Accuracy: {np.mean(kf_scores):.2f} ± {np.std(kf_scores):.2f}')

skf = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)
skf_scores = []

for train_index, test_index in skf.split(X, y):
    X_train, X_test = X[train_index], X[test_index]
    y_train, y_test = y[train_index], y[test_index]
    model.fit(X_train, y_train)
    predictions = model.predict(X_test)
    score = accuracy_score(y_test, predictions)
    skf_scores.append(score)

print(f'Stratified K-Fold Accuracy: {np.mean(skf_scores):.2f} ± {np.std(skf_scores):.2f}')
