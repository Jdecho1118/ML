!pip install pyngrok flask scikit-learn

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
import pickle
from flask import Flask, request, jsonify
from pyngrok import ngrok

iris = load_iris()
X, y = iris.data, iris.target
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestClassifier()
model.fit(X_train, y_train)

with open('model.pkl', 'wb') as model_file:
    pickle.dump(model, model_file)

with open('model.pkl', 'rb') as model_file:
    model = pickle.load(model_file)

app = Flask(__name__)
port = "5000"

@app.route('/')
def home():
    return "Welcome to the Iris Prediction API! Use the /predict endpoint to make predictions."

@app.route('/predict', methods=['POST'])
def predict():
    data = request.json
    features = data.get('features')
    if not features or len(features) != 4:
        return jsonify({'error': 'Invalid input format. Please provide 4 features.'}), 400
    try:
        prediction = model.predict([features])
        return jsonify({'prediction': int(prediction[0])})
    except Exception as e:
        return jsonify({'error': str(e)}), 500

ngrok.set_auth_token("api_auth_token")
public_url = ngrok.connect(port).public_url
print("Public URL:", public_url)

if __name__ == '__main__':
    app.run(port=port)
